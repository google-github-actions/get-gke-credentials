name: 'integration'

on:
  push:
    branches:
    - 'main'
  pull_request:
    branches:
    - 'main'

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  auth_workload_identity_federation:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    name: 'auth_workload_identity_federation'
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: 'actions/checkout@v3'

    - uses: 'actions/setup-node@v3'
      with:
        node-version: '16.x'

    - name: 'npm build'
      run: 'npm ci && npm run build'

    - uses: 'google-github-actions/auth@main'
      with:
        workload_identity_provider: '${{ secrets.WIF_PROVIDER_NAME }}'
        service_account: '${{ secrets.GET_GKE_CRED_SA_EMAIL }}'

    - name: 'get-gke-credentials'
      uses: './'
      with:
        project_id: '${{ secrets.GET_GKE_CRED_PROJECT }}'
        cluster_name: '${{ secrets.GET_GKE_CRED_CLUSTER_NAME }}'
        location: '${{ secrets.GET_GKE_CRED_CLUSTER_LOCATION }}'

    - name: 'npm e2e-tests'
      run: 'npm run e2e-tests'

    # Use kubectl with the generated kubeconfig to auth and list pods. There
    # should be no pods in the default namespace.
    - name: 'kubectl'
      run: |-
        set -eEuo pipefail

        pods=$(kubectl get pods -o=jsonpath='{$.items[*]}')
        if [ -n "$pods" ]; then
          echo "Expected no pods. Got ${pods}"
          exit 1
        fi

  auth_credentials:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    name: 'auth_credentials'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: 'actions/checkout@v3'

    - uses: 'actions/setup-node@v3'
      with:
        node-version: '16.x'

    - name: 'npm build'
      run: 'npm ci && npm run build'

    - uses: 'google-github-actions/auth@main'
      with:
        credentials_json: '${{ secrets.GET_GKE_CRED_SA_KEY_JSON }}'

    - name: 'get-gke-credentials'
      uses: './'
      with:
        project_id: '${{ secrets.GET_GKE_CRED_PROJECT }}'
        cluster_name: '${{ secrets.GET_GKE_CRED_CLUSTER_NAME }}'
        location: '${{ secrets.GET_GKE_CRED_CLUSTER_LOCATION }}'

    - name: 'npm e2e-tests'
      run: 'npm run e2e-tests'

    # Use kubectl with the generated kubeconfig to auth and list pods. There
    # should be no pods in the default namespace.
    - name: 'kubectl'
      run: |-
        set -eEuo pipefail

        pods=$(kubectl get pods -o=jsonpath='{$.items[*]}')
        if [ -n "$pods" ]; then
          echo "Expected no pods. Got ${pods}"
          exit 1
        fi

  # Deprecated
  json:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    name: 'json'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: 'actions/checkout@v3'

    - uses: 'actions/setup-node@v3'
      with:
        node-version: '16.x'

    - name: 'npm build'
      run: 'npm ci && npm run build'

    - name: 'get-gke-credentials'
      uses: './'
      with:
        credentials: '${{ secrets.GET_GKE_CRED_SA_KEY_JSON }}'
        project_id: '${{ secrets.GET_GKE_CRED_PROJECT }}'
        cluster_name: '${{ secrets.GET_GKE_CRED_CLUSTER_NAME }}'
        location: '${{ secrets.GET_GKE_CRED_CLUSTER_LOCATION }}'

    - name: 'npm e2e-tests'
      run: 'npm run e2e-tests'

    # Use kubectl with the generated kubeconfig to auth and list pods. There
    # should be no pods in the default namespace.
    - name: 'kubectl'
      run: |-
        set -eEuo pipefail

        pods=$(kubectl get pods -o=jsonpath='{$.items[*]}')
        if [ -n "$pods" ]; then
          echo "Expected no pods. Got ${pods}"
          exit 1
        fi
